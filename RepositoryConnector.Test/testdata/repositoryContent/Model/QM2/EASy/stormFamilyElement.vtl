template stormFamilyElement(Configuration config, FileArtifact target, DecisionVariable elt) {

    def main(Configuration config, FileArtifact target, DecisionVariable elt) {
        String name = elt.varName().firstToUpperCase() + elt.type();
        String familyName = elt.byName("family").byName("name");
    	'import java.util.*;'
    	'import backtype.storm.topology.base.*;'
    	'import backtype.storm.tuple.*;'
    	'import backtype.storm.task.*;'
    	'import backtype.storm.topology.*;'
    	''
    	'@SuppressWarnings({ "rawtypes", "serial" })'
    	'public class $name extends BaseRichBolt {'
    	''
		'    @Override'
		'    public void execute(Tuple tuple) {'
		'        // delegate to family "$familyName"'
		'    }'
	    ''
		'    @Override'
		'    public void prepare(Map map, TopologyContext topologyContext, OutputCollector collector) {'
		'    }'
	    ''
		'    @Override'
		'    public void declareOutputFields(OutputFieldsDeclarer declarer) {'
		'    }'
    	''
    	'}'
    }
        
}