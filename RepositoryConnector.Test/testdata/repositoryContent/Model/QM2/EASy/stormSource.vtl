template stormSource(Configuration config, FileArtifact target, DecisionVariable elt) {

    def main(Configuration config, FileArtifact target, DecisionVariable elt) {
        String name = elt.varName().firstToUpperCase() + elt.type();
    	'import java.util.*;'
    	'import backtype.storm.topology.*;'
    	'import backtype.storm.task.*;'
    	'import backtype.storm.spout.*;'
    	'import backtype.storm.topology.base.*;'
    	''
    	'@SuppressWarnings({ "rawtypes", "serial" })'
    	'public class $name extends BaseRichSpout {'
    	''
    	'    @Override'
        '    public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {'
        '    }'
        ''
        '    @Override'
        '    public void nextTuple() {'
        '    }'
        ''
        '    @Override'
        '    public void close() {'
        '    }'
        ''
        '	 @Override'
		'    public void declareOutputFields(OutputFieldsDeclarer declarer) {'
		'    }'
    	'}'
    }
    
}